/**
 * CSS for MonoLisa Variable Regular
 * Generated by Wakamai Fondue - https://wakamaifondue.com
 * by Roel Nieskens/PixelAmbacht - https://pixelambacht.nl
 */

@font-face {
  font-family: "MonoLisa Variable";

  src: url("/fonts/MonoLisaVariableNormal.woff2");

  font-weight: 100 1000;

  unicode-range: U+0020-007E, U+00A0-00AC, U+00AE-00B4, U+00B6-0131,
    U+0134-0148, U+014A-017E, U+018F, U+0192, U+019D, U+01A0-01A1,
    U+01AF-01B0, U+01B7, U+01CD-01DC, U+01E4-01EB, U+01EE-01EF,
    U+01FC-01FF, U+0218-021B, U+0232-0233, U+0237, U+0259, U+0272, U+0292,
    U+02BC, U+02C6-02C7, U+02D8-02DD, U+0300-0304, U+0306-030C, U+0312,
    U+031B, U+0323, U+0326-0328, U+0374-0375, U+0384-0386, U+0388-038A,
    U+038C, U+038E-03A1, U+03A3-03CF, U+03D7, U+0400-040D, U+040F-045D,
    U+045F, U+0490-0491, U+0E3F, U+1E80-1E85, U+1E9E, U+1EA0-1EF9,
    U+2013-2014, U+2018-201A, U+201C-201E, U+2020-2022, U+2026, U+2030,
    U+2039-203A, U+2044, U+2070, U+2074-2079, U+2080-2089, U+20A9-20AA,
    U+20AC, U+20B1, U+20B4, U+20B9-20BA, U+20BD, U+20BF, U+2113, U+2116,
    U+2122, U+212E, U+2150, U+2153-215E, U+2190-2199, U+21B0-21B5,
    U+21E6-21EA, U+2202, U+2205, U+220F, U+2211-2212, U+221A, U+221E,
    U+222B, U+2248, U+2260, U+2264-2265, U+2318, U+2325-2328, U+232B,
    U+2387, U+238B, U+23CE-23CF, U+23FB-23FE, U+2500-25A3, U+25AA-25AF,
    U+25B2, U+25B6, U+25BC, U+25C0, U+25C4, U+25C6-25C7, U+25C9-25D7,
    U+25D9-25EB, U+25EF-25F7, U+2601, U+2607, U+2610-2612, U+261A-261F,
    U+2639-263C, U+263E, U+2665, U+2713-2718, U+2744, U+27A1, U+27B2,
    U+2B05-2B07, U+2B58, U+3008-3009, U+E0A0-E0A2, U+E0B0-E0B3,
    U+EE00-EE0B, U+EE10-EE15;
}

/* Set custom properties for each layout feature */

:root {
  --monolisa-variable-regular-aalt: "aalt" off;
  --monolisa-variable-regular-case: "case" off;
  --monolisa-variable-regular-dnom: "dnom" off;
  --monolisa-variable-regular-frac: "frac" off;
  --monolisa-variable-regular-numr: "numr" off;
  --monolisa-variable-regular-onum: "onum" off;
  --monolisa-variable-regular-ordn: "ordn" off;
  --monolisa-variable-regular-sinf: "sinf" off;
  --monolisa-variable-regular-ss01: "ss01" off;
  --monolisa-variable-regular-ss03: "ss03" off;
  --monolisa-variable-regular-ss04: "ss04" off;
  --monolisa-variable-regular-ss05: "ss05" off;
  --monolisa-variable-regular-ss06: "ss06" off;
  --monolisa-variable-regular-ss07: "ss07" off;
  --monolisa-variable-regular-ss08: "ss08" off;
  --monolisa-variable-regular-ss09: "ss09" off;
  --monolisa-variable-regular-ss10: "ss10" off;
  --monolisa-variable-regular-ss11: "ss11" off;
  --monolisa-variable-regular-ss12: "ss12" off;
  --monolisa-variable-regular-subs: "subs" off;
  --monolisa-variable-regular-sups: "sups" off;
  --monolisa-variable-regular-zero: "zero" off;
}

/* If class is applied, update custom property and
   apply modern font-variant-* when supported */

.monolisa-variable-regular-aalt {
  --monolisa-variable-regular-aalt: "aalt" on;
}

.monolisa-variable-regular-case {
  --monolisa-variable-regular-case: "case" on;
}

.monolisa-variable-regular-dnom {
  --monolisa-variable-regular-dnom: "dnom" on;
}

.monolisa-variable-regular-frac {
  --monolisa-variable-regular-frac: "frac" on;
}

@supports (font-variant-numeric: diagonal-fractions) {
  .monolisa-variable-regular-frac {
    --monolisa-variable-regular-frac: "____";
    font-variant-numeric: diagonal-fractions;
  }
}

.monolisa-variable-regular-numr {
  --monolisa-variable-regular-numr: "numr" on;
}

.monolisa-variable-regular-onum {
  --monolisa-variable-regular-onum: "onum" on;
}

@supports (font-variant-numeric: oldstyle-nums) {
  .monolisa-variable-regular-onum {
    --monolisa-variable-regular-onum: "____";
    font-variant-numeric: oldstyle-nums;
  }
}

.monolisa-variable-regular-ordn {
  --monolisa-variable-regular-ordn: "ordn" on;
}

@supports (font-variant-numeric: ordinal) {
  .monolisa-variable-regular-ordn {
    --monolisa-variable-regular-ordn: "____";
    font-variant-numeric: ordinal;
  }
}

.monolisa-variable-regular-sinf {
  --monolisa-variable-regular-sinf: "sinf" on;
}

.monolisa-variable-regular-ss01 {
  --monolisa-variable-regular-ss01: "ss01" on;
}

.monolisa-variable-regular-ss03 {
  --monolisa-variable-regular-ss03: "ss03" on;
}

.monolisa-variable-regular-ss04 {
  --monolisa-variable-regular-ss04: "ss04" on;
}

.monolisa-variable-regular-ss05 {
  --monolisa-variable-regular-ss05: "ss05" on;
}

.monolisa-variable-regular-ss06 {
  --monolisa-variable-regular-ss06: "ss06" on;
}

.monolisa-variable-regular-ss07 {
  --monolisa-variable-regular-ss07: "ss07" on;
}

.monolisa-variable-regular-ss08 {
  --monolisa-variable-regular-ss08: "ss08" on;
}

.monolisa-variable-regular-ss09 {
  --monolisa-variable-regular-ss09: "ss09" on;
}

.monolisa-variable-regular-ss10 {
  --monolisa-variable-regular-ss10: "ss10" on;
}

.monolisa-variable-regular-ss11 {
  --monolisa-variable-regular-ss11: "ss11" on;
}

.monolisa-variable-regular-ss12 {
  --monolisa-variable-regular-ss12: "ss12" on;
}

.monolisa-variable-regular-subs {
  --monolisa-variable-regular-subs: "subs" on;
}

@supports (font-variant-position: sub) {
  .monolisa-variable-regular-subs {
    --monolisa-variable-regular-subs: "____";
    font-variant-position: sub;
  }
}

.monolisa-variable-regular-sups {
  --monolisa-variable-regular-sups: "sups" on;
}

@supports (font-variant-position: super) {
  .monolisa-variable-regular-sups {
    --monolisa-variable-regular-sups: "____";
    font-variant-position: super;
  }
}

.monolisa-variable-regular-zero {
  --monolisa-variable-regular-zero: "zero" on;
}

@supports (font-variant-numeric: slashed-zero) {
  .monolisa-variable-regular-zero {
    --monolisa-variable-regular-zero: "____";
    font-variant-numeric: slashed-zero;
  }
}

/* Apply current state of all custom properties
   whenever a class is being applied */

.monolisa-variable-regular-aalt,
.monolisa-variable-regular-case,
.monolisa-variable-regular-dnom,
.monolisa-variable-regular-frac,
.monolisa-variable-regular-numr,
.monolisa-variable-regular-onum,
.monolisa-variable-regular-ordn,
.monolisa-variable-regular-sinf,
.monolisa-variable-regular-ss01,
.monolisa-variable-regular-ss03,
.monolisa-variable-regular-ss04,
.monolisa-variable-regular-ss05,
.monolisa-variable-regular-ss06,
.monolisa-variable-regular-ss07,
.monolisa-variable-regular-ss08,
.monolisa-variable-regular-ss09,
.monolisa-variable-regular-ss10,
.monolisa-variable-regular-ss11,
.monolisa-variable-regular-ss12,
.monolisa-variable-regular-subs,
.monolisa-variable-regular-sups,
.monolisa-variable-regular-zero {
  font-feature-settings: var(--monolisa-variable-regular-aalt), var(--monolisa-variable-regular-case),
    var(--monolisa-variable-regular-dnom), var(--monolisa-variable-regular-frac), var(--monolisa-variable-regular-numr),
    var(--monolisa-variable-regular-onum), var(--monolisa-variable-regular-ordn), var(--monolisa-variable-regular-sinf),
    var(--monolisa-variable-regular-ss01), var(--monolisa-variable-regular-ss03), var(--monolisa-variable-regular-ss04),
    var(--monolisa-variable-regular-ss05), var(--monolisa-variable-regular-ss06), var(--monolisa-variable-regular-ss07),
    var(--monolisa-variable-regular-ss08), var(--monolisa-variable-regular-ss09), var(--monolisa-variable-regular-ss10),
    var(--monolisa-variable-regular-ss11), var(--monolisa-variable-regular-ss12), var(--monolisa-variable-regular-subs),
    var(--monolisa-variable-regular-sups), var(--monolisa-variable-regular-zero);
}

/* Variable instances */

.monolisa-variable-regular-thin {
  font-variation-settings: "wght" 100;
}

.monolisa-variable-regular-extralight {
  font-variation-settings: "wght" 200;
}

.monolisa-variable-regular-light {
  font-variation-settings: "wght" 300;
}

.monolisa-variable-regular-regular {
  font-variation-settings: "wght" 400;
}

.monolisa-variable-regular-monolisavariableregular-regular {
  font-variation-settings: "wght" 500;
}

.monolisa-variable-regular-monolisavariableregular-medium {
  font-variation-settings: "wght" 600;
}

.monolisa-variable-regular-monolisavariableregular-semibold {
  font-variation-settings: "wght" 700;
}

.monolisa-variable-regular-monolisavariableregular-bold {
  font-variation-settings: "wght" 800;
}

.monolisa-variable-regular-monolisavariableregular-extrabold {
  font-variation-settings: "wght" 900;
}

@font-face {
  font-family: "MonoLisa Variable";

  src: url("/fonts/MonoLisaVariableItalic.woff2");

  font-weight: 100 1000;

  unicode-range: U+0020-007E, U+00A0-00AC, U+00AE-00B4, U+00B6-0131,
    U+0134-0148, U+014A-017E, U+018F, U+0192, U+019D, U+01A0-01A1,
    U+01AF-01B0, U+01B7, U+01CD-01DC, U+01E4-01EB, U+01EE-01EF,
    U+01FC-01FF, U+0218-021B, U+0232-0233, U+0237, U+0259, U+0272, U+0292,
    U+02BC, U+02C6-02C7, U+02D8-02DD, U+0300-0304, U+0306-030C, U+0312,
    U+031B, U+0323, U+0326-0328, U+0374-0375, U+0384-0386, U+0388-038A,
    U+038C, U+038E-03A1, U+03A3-03CF, U+03D7, U+0400-040D, U+040F-045D,
    U+045F, U+0490-0491, U+0E3F, U+1E80-1E85, U+1E9E, U+1EA0-1EF9,
    U+2013-2014, U+2018-201A, U+201C-201E, U+2020-2022, U+2026, U+2030,
    U+2039-203A, U+2044, U+2070, U+2074-2079, U+2080-2089, U+20A9-20AA,
    U+20AC, U+20B1, U+20B4, U+20B9-20BA, U+20BD, U+20BF, U+2113, U+2116,
    U+2122, U+212E, U+2150, U+2153-215E, U+2190-2199, U+21B0-21B5,
    U+21E6-21EA, U+2202, U+2205, U+220F, U+2211-2212, U+221A, U+221E,
    U+222B, U+2248, U+2260, U+2264-2265, U+2318, U+2325-2328, U+232B,
    U+2387, U+238B, U+23CE-23CF, U+23FB-23FE, U+2500-25A3, U+25AA-25AF,
    U+25B2, U+25B6, U+25BC, U+25C0, U+25C4, U+25C6-25C7, U+25C9-25D7,
    U+25D9-25EB, U+25EF-25F7, U+2601, U+2607, U+2610-2612, U+261A-261F,
    U+2639-263C, U+263E, U+2665, U+2713-2718, U+2744, U+27A1, U+27B2,
    U+2B05-2B07, U+2B58, U+3008-3009, U+E0A0-E0A2, U+E0B0-E0B3,
    U+EE00-EE0B, U+EE10-EE15;

  font-style: italic;
}

/* Set custom properties for each layout feature */

:root {
  --monolisa-variable-italic-aalt: "aalt" off;
  --monolisa-variable-italic-case: "case" off;
  --monolisa-variable-italic-dnom: "dnom" off;
  --monolisa-variable-italic-frac: "frac" off;
  --monolisa-variable-italic-numr: "numr" off;
  --monolisa-variable-italic-onum: "onum" off;
  --monolisa-variable-italic-ordn: "ordn" off;
  --monolisa-variable-italic-sinf: "sinf" off;
  --monolisa-variable-italic-ss01: "ss01" off;
  --monolisa-variable-italic-ss02: "ss02" off;
  --monolisa-variable-italic-ss05: "ss05" off;
  --monolisa-variable-italic-ss06: "ss06" off;
  --monolisa-variable-italic-ss07: "ss07" off;
  --monolisa-variable-italic-ss08: "ss08" off;
  --monolisa-variable-italic-ss09: "ss09" off;
  --monolisa-variable-italic-ss10: "ss10" off;
  --monolisa-variable-italic-ss11: "ss11" off;
  --monolisa-variable-italic-ss12: "ss12" off;
  --monolisa-variable-italic-subs: "subs" off;
  --monolisa-variable-italic-sups: "sups" off;
  --monolisa-variable-italic-zero: "zero" off;
}

/* If class is applied, update custom property and
   apply modern font-variant-* when supported */

.monolisa-variable-italic-aalt {
  --monolisa-variable-italic-aalt: "aalt" on;
}

.monolisa-variable-italic-case {
  --monolisa-variable-italic-case: "case" on;
}

.monolisa-variable-italic-dnom {
  --monolisa-variable-italic-dnom: "dnom" on;
}

.monolisa-variable-italic-frac {
  --monolisa-variable-italic-frac: "frac" on;
}

@supports (font-variant-numeric: diagonal-fractions) {
  .monolisa-variable-italic-frac {
    --monolisa-variable-italic-frac: "____";
    font-variant-numeric: diagonal-fractions;
  }
}

.monolisa-variable-italic-numr {
  --monolisa-variable-italic-numr: "numr" on;
}

.monolisa-variable-italic-onum {
  --monolisa-variable-italic-onum: "onum" on;
}

@supports (font-variant-numeric: oldstyle-nums) {
  .monolisa-variable-italic-onum {
    --monolisa-variable-italic-onum: "____";
    font-variant-numeric: oldstyle-nums;
  }
}

.monolisa-variable-italic-ordn {
  --monolisa-variable-italic-ordn: "ordn" on;
}

@supports (font-variant-numeric: ordinal) {
  .monolisa-variable-italic-ordn {
    --monolisa-variable-italic-ordn: "____";
    font-variant-numeric: ordinal;
  }
}

.monolisa-variable-italic-sinf {
  --monolisa-variable-italic-sinf: "sinf" on;
}

.monolisa-variable-italic-ss01 {
  --monolisa-variable-italic-ss01: "ss01" on;
}

.monolisa-variable-italic-ss02 {
  --monolisa-variable-italic-ss02: "ss02" on;
}

.monolisa-variable-italic-ss05 {
  --monolisa-variable-italic-ss05: "ss05" on;
}

.monolisa-variable-italic-ss06 {
  --monolisa-variable-italic-ss06: "ss06" on;
}

.monolisa-variable-italic-ss07 {
  --monolisa-variable-italic-ss07: "ss07" on;
}

.monolisa-variable-italic-ss08 {
  --monolisa-variable-italic-ss08: "ss08" on;
}

.monolisa-variable-italic-ss09 {
  --monolisa-variable-italic-ss09: "ss09" on;
}

.monolisa-variable-italic-ss10 {
  --monolisa-variable-italic-ss10: "ss10" on;
}

.monolisa-variable-italic-ss11 {
  --monolisa-variable-italic-ss11: "ss11" on;
}

.monolisa-variable-italic-ss12 {
  --monolisa-variable-italic-ss12: "ss12" on;
}

.monolisa-variable-italic-subs {
  --monolisa-variable-italic-subs: "subs" on;
}

@supports (font-variant-position: sub) {
  .monolisa-variable-italic-subs {
    --monolisa-variable-italic-subs: "____";
    font-variant-position: sub;
  }
}

.monolisa-variable-italic-sups {
  --monolisa-variable-italic-sups: "sups" on;
}

@supports (font-variant-position: super) {
  .monolisa-variable-italic-sups {
    --monolisa-variable-italic-sups: "____";
    font-variant-position: super;
  }
}

.monolisa-variable-italic-zero {
  --monolisa-variable-italic-zero: "zero" on;
}

@supports (font-variant-numeric: slashed-zero) {
  .monolisa-variable-italic-zero {
    --monolisa-variable-italic-zero: "____";
    font-variant-numeric: slashed-zero;
  }
}

/* Apply current state of all custom properties
   whenever a class is being applied */

.monolisa-variable-italic-aalt,
.monolisa-variable-italic-case,
.monolisa-variable-italic-dnom,
.monolisa-variable-italic-frac,
.monolisa-variable-italic-numr,
.monolisa-variable-italic-onum,
.monolisa-variable-italic-ordn,
.monolisa-variable-italic-sinf,
.monolisa-variable-italic-ss01,
.monolisa-variable-italic-ss02,
.monolisa-variable-italic-ss05,
.monolisa-variable-italic-ss06,
.monolisa-variable-italic-ss07,
.monolisa-variable-italic-ss08,
.monolisa-variable-italic-ss09,
.monolisa-variable-italic-ss10,
.monolisa-variable-italic-ss11,
.monolisa-variable-italic-ss12,
.monolisa-variable-italic-subs,
.monolisa-variable-italic-sups,
.monolisa-variable-italic-zero {
  font-feature-settings: var(--monolisa-variable-italic-aalt), var(--monolisa-variable-italic-case),
    var(--monolisa-variable-italic-dnom), var(--monolisa-variable-italic-frac), var(--monolisa-variable-italic-numr),
    var(--monolisa-variable-italic-onum), var(--monolisa-variable-italic-ordn), var(--monolisa-variable-italic-sinf),
    var(--monolisa-variable-italic-ss01), var(--monolisa-variable-italic-ss02), var(--monolisa-variable-italic-ss05),
    var(--monolisa-variable-italic-ss06), var(--monolisa-variable-italic-ss07), var(--monolisa-variable-italic-ss08),
    var(--monolisa-variable-italic-ss09), var(--monolisa-variable-italic-ss10), var(--monolisa-variable-italic-ss11),
    var(--monolisa-variable-italic-ss12), var(--monolisa-variable-italic-subs), var(--monolisa-variable-italic-sups),
    var(--monolisa-variable-italic-zero);
}

/* Variable instances */

.monolisa-variable-italic-thin-italic {
  font-variation-settings: "wght" 100;
}

.monolisa-variable-italic-extralight-italic {
  font-variation-settings: "wght" 200;
}

.monolisa-variable-italic-light-italic {
  font-variation-settings: "wght" 300;
}

.monolisa-variable-italic-italic {
  font-variation-settings: "wght" 400;
}

.monolisa-variable-italic-regular-italic {
  font-variation-settings: "wght" 500;
}

.monolisa-variable-italic-medium-italic {
  font-variation-settings: "wght" 600;
}

.monolisa-variable-italic-semibold-italic {
  font-variation-settings: "wght" 700;
}

.monolisa-variable-italic-bold-italic {
  font-variation-settings: "wght" 800;
}

.monolisa-variable-italic-extrabold-italic {
  font-variation-settings: "wght" 900;
}

/*! tailwindcss v3.3.2 | MIT License | https://tailwindcss.com
 */

/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*,
::before,
::after {
  box-sizing: border-box;
  /* 1 */
  border-width: 0;
  /* 2 */
  border-style: solid;
  /* 2 */
  border-color: #e5e7eb;
  /* 2 */
}

::before,
::after {
  --tw-content: '';
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
5. Use the user's configured `sans` font-feature-settings by default.
6. Use the user's configured `sans` font-variation-settings by default.
*/

html {
  line-height: 1.5;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -moz-tab-size: 4;
  /* 3 */
  -o-tab-size: 4;
     tab-size: 4;
  /* 3 */
  font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  /* 4 */
  font-feature-settings: normal;
  /* 5 */
  font-variation-settings: normal;
  /* 6 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

body {
  margin: 0;
  /* 1 */
  line-height: inherit;
  /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr {
  height: 0;
  /* 1 */
  color: inherit;
  /* 2 */
  border-top-width: 1px;
  /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/*
1. Use the user's configured `mono` font family by default.
2. Correct the odd `em` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family: MonoLisa Variable, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, Liberation Mono, Courier New, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/*
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table {
  text-indent: 0;
  /* 1 */
  border-color: inherit;
  /* 2 */
  border-collapse: collapse;
  /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  font-weight: inherit;
  /* 1 */
  line-height: inherit;
  /* 1 */
  color: inherit;
  /* 1 */
  margin: 0;
  /* 2 */
  padding: 0;
  /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
[type='button'],
[type='reset'],
[type='submit'] {
  -webkit-appearance: button;
  /* 1 */
  background-color: transparent;
  /* 2 */
  background-image: none;
  /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
  outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

fieldset {
  margin: 0;
  padding: 0;
}

legend {
  padding: 0;
}

ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

input::placeholder,
textarea::placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

/*
Set the default cursor for buttons.
*/

button,
[role="button"] {
  cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/

:disabled {
  cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block;
  /* 1 */
  vertical-align: middle;
  /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
  max-width: 100%;
  height: auto;
}

/* Make elements with the HTML hidden attribute stay hidden by default */

[hidden] {
  display: none;
}

[type='text'],[type='email'],[type='url'],[type='password'],[type='number'],[type='date'],[type='datetime-local'],[type='month'],[type='search'],[type='tel'],[type='time'],[type='week'],[multiple],textarea,select {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  background-color: #fff;
  border-color: #6b7280;
  border-width: 1px;
  border-radius: 0px;
  padding-top: 0.5rem;
  padding-right: 0.75rem;
  padding-bottom: 0.5rem;
  padding-left: 0.75rem;
  font-size: 1rem;
  line-height: 1.5rem;
  --tw-shadow: 0 0 #0000;
}

[type='text']:focus, [type='email']:focus, [type='url']:focus, [type='password']:focus, [type='number']:focus, [type='date']:focus, [type='datetime-local']:focus, [type='month']:focus, [type='search']:focus, [type='tel']:focus, [type='time']:focus, [type='week']:focus, [multiple]:focus, textarea:focus, select:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
  --tw-ring-inset: var(--tw-empty,/*!*/ /*!*/);
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: #2563eb;
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  border-color: #2563eb;
}

input::-moz-placeholder, textarea::-moz-placeholder {
  color: #6b7280;
  opacity: 1;
}

input::placeholder,textarea::placeholder {
  color: #6b7280;
  opacity: 1;
}

::-webkit-datetime-edit-fields-wrapper {
  padding: 0;
}

::-webkit-date-and-time-value {
  min-height: 1.5em;
}

::-webkit-datetime-edit,::-webkit-datetime-edit-year-field,::-webkit-datetime-edit-month-field,::-webkit-datetime-edit-day-field,::-webkit-datetime-edit-hour-field,::-webkit-datetime-edit-minute-field,::-webkit-datetime-edit-second-field,::-webkit-datetime-edit-millisecond-field,::-webkit-datetime-edit-meridiem-field {
  padding-top: 0;
  padding-bottom: 0;
}

select {
  background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M6 8l4 4 4-4'/%3e%3c/svg%3e");
  background-position: right 0.5rem center;
  background-repeat: no-repeat;
  background-size: 1.5em 1.5em;
  padding-right: 2.5rem;
  -webkit-print-color-adjust: exact;
          print-color-adjust: exact;
}

[multiple] {
  background-image: initial;
  background-position: initial;
  background-repeat: unset;
  background-size: initial;
  padding-right: 0.75rem;
  -webkit-print-color-adjust: unset;
          print-color-adjust: unset;
}

[type='checkbox'],[type='radio'] {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  padding: 0;
  -webkit-print-color-adjust: exact;
          print-color-adjust: exact;
  display: inline-block;
  vertical-align: middle;
  background-origin: border-box;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
  flex-shrink: 0;
  height: 1rem;
  width: 1rem;
  color: #2563eb;
  background-color: #fff;
  border-color: #6b7280;
  border-width: 1px;
  --tw-shadow: 0 0 #0000;
}

[type='checkbox'] {
  border-radius: 0px;
}

[type='radio'] {
  border-radius: 100%;
}

[type='checkbox']:focus,[type='radio']:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
  --tw-ring-inset: var(--tw-empty,/*!*/ /*!*/);
  --tw-ring-offset-width: 2px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: #2563eb;
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
}

[type='checkbox']:checked,[type='radio']:checked {
  border-color: transparent;
  background-color: currentColor;
  background-size: 100% 100%;
  background-position: center;
  background-repeat: no-repeat;
}

[type='checkbox']:checked {
  background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 16 16' fill='white' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M12.207 4.793a1 1 0 010 1.414l-5 5a1 1 0 01-1.414 0l-2-2a1 1 0 011.414-1.414L6.5 9.086l4.293-4.293a1 1 0 011.414 0z'/%3e%3c/svg%3e");
}

[type='radio']:checked {
  background-image: url("data:image/svg+xml,%3csvg viewBox='0 0 16 16' fill='white' xmlns='http://www.w3.org/2000/svg'%3e%3ccircle cx='8' cy='8' r='3'/%3e%3c/svg%3e");
}

[type='checkbox']:checked:hover,[type='checkbox']:checked:focus,[type='radio']:checked:hover,[type='radio']:checked:focus {
  border-color: transparent;
  background-color: currentColor;
}

[type='checkbox']:indeterminate {
  background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 16 16'%3e%3cpath stroke='white' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 8h8'/%3e%3c/svg%3e");
  border-color: transparent;
  background-color: currentColor;
  background-size: 100% 100%;
  background-position: center;
  background-repeat: no-repeat;
}

[type='checkbox']:indeterminate:hover,[type='checkbox']:indeterminate:focus {
  border-color: transparent;
  background-color: currentColor;
}

[type='file'] {
  background: unset;
  border-color: inherit;
  border-width: 0;
  border-radius: 0;
  padding: 0;
  font-size: unset;
  line-height: inherit;
}

[type='file']:focus {
  outline: 1px solid ButtonText;
  outline: 1px auto -webkit-focus-ring-color;
}

*, ::before, ::after {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}

::backdrop {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}

.prose {
  color: var(--tw-prose-body);
  max-width: 65ch;
}

.prose :where(p):not(:where([class~="not-prose"] *)) {
  margin-top: 1.25em;
  margin-bottom: 1.25em;
}

.prose :where([class~="lead"]):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-lead);
  font-size: 1.25em;
  line-height: 1.6;
  margin-top: 1.2em;
  margin-bottom: 1.2em;
}

.prose :where(a):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-links);
  text-decoration: underline;
  font-weight: 500;
}

.prose :where(strong):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-bold);
  font-weight: 600;
}

.prose :where(a strong):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.prose :where(blockquote strong):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.prose :where(thead th strong):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.prose :where(ol):not(:where([class~="not-prose"] *)) {
  list-style-type: decimal;
  margin-top: 1.25em;
  margin-bottom: 1.25em;
  padding-left: 1.625em;
}

.prose :where(ol[type="A"]):not(:where([class~="not-prose"] *)) {
  list-style-type: upper-alpha;
}

.prose :where(ol[type="a"]):not(:where([class~="not-prose"] *)) {
  list-style-type: lower-alpha;
}

.prose :where(ol[type="A" s]):not(:where([class~="not-prose"] *)) {
  list-style-type: upper-alpha;
}

.prose :where(ol[type="a" s]):not(:where([class~="not-prose"] *)) {
  list-style-type: lower-alpha;
}

.prose :where(ol[type="I"]):not(:where([class~="not-prose"] *)) {
  list-style-type: upper-roman;
}

.prose :where(ol[type="i"]):not(:where([class~="not-prose"] *)) {
  list-style-type: lower-roman;
}

.prose :where(ol[type="I" s]):not(:where([class~="not-prose"] *)) {
  list-style-type: upper-roman;
}

.prose :where(ol[type="i" s]):not(:where([class~="not-prose"] *)) {
  list-style-type: lower-roman;
}

.prose :where(ol[type="1"]):not(:where([class~="not-prose"] *)) {
  list-style-type: decimal;
}

.prose :where(ul):not(:where([class~="not-prose"] *)) {
  list-style-type: disc;
  margin-top: 1.25em;
  margin-bottom: 1.25em;
  padding-left: 1.625em;
}

.prose :where(ol > li):not(:where([class~="not-prose"] *))::marker {
  font-weight: 400;
  color: var(--tw-prose-counters);
}

.prose :where(ul > li):not(:where([class~="not-prose"] *))::marker {
  color: var(--tw-prose-bullets);
}

.prose :where(hr):not(:where([class~="not-prose"] *)) {
  border-color: var(--tw-prose-hr);
  border-top-width: 1px;
  margin-top: 3em;
  margin-bottom: 3em;
}

.prose :where(blockquote):not(:where([class~="not-prose"] *)) {
  font-weight: 500;
  font-style: italic;
  color: var(--tw-prose-quotes);
  border-left-width: 0.25rem;
  border-left-color: var(--tw-prose-quote-borders);
  quotes: "\201C""\201D""\2018""\2019";
  margin-top: 1.6em;
  margin-bottom: 1.6em;
  padding-left: 1em;
}

.prose :where(blockquote p:first-of-type):not(:where([class~="not-prose"] *))::before {
  content: open-quote;
}

.prose :where(blockquote p:last-of-type):not(:where([class~="not-prose"] *))::after {
  content: close-quote;
}

.prose :where(h1):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 800;
  font-size: 2.25em;
  margin-top: 0;
  margin-bottom: 0.8888889em;
  line-height: 1.1111111;
}

.prose :where(h1 strong):not(:where([class~="not-prose"] *)) {
  font-weight: 900;
  color: inherit;
}

.prose :where(h2):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 700;
  font-size: 1.5em;
  margin-top: 2em;
  margin-bottom: 1em;
  line-height: 1.3333333;
}

.prose :where(h2 strong):not(:where([class~="not-prose"] *)) {
  font-weight: 800;
  color: inherit;
}

.prose :where(h3):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  font-size: 1.25em;
  margin-top: 1.6em;
  margin-bottom: 0.6em;
  line-height: 1.6;
}

.prose :where(h3 strong):not(:where([class~="not-prose"] *)) {
  font-weight: 700;
  color: inherit;
}

.prose :where(h4):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  margin-top: 1.5em;
  margin-bottom: 0.5em;
  line-height: 1.5;
}

.prose :where(h4 strong):not(:where([class~="not-prose"] *)) {
  font-weight: 700;
  color: inherit;
}

.prose :where(img):not(:where([class~="not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}

.prose :where(figure > *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
  margin-bottom: 0;
}

.prose :where(figcaption):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-captions);
  font-size: 0.875em;
  line-height: 1.4285714;
  margin-top: 0.8571429em;
}

.prose :where(code):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-code);
  font-weight: 600;
  font-size: 0.875em;
}

.prose :where(code):not(:where([class~="not-prose"] *))::before {
  content: "`";
}

.prose :where(code):not(:where([class~="not-prose"] *))::after {
  content: "`";
}

.prose :where(a code):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.prose :where(h1 code):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.prose :where(h2 code):not(:where([class~="not-prose"] *)) {
  color: inherit;
  font-size: 0.875em;
}

.prose :where(h3 code):not(:where([class~="not-prose"] *)) {
  color: inherit;
  font-size: 0.9em;
}

.prose :where(h4 code):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.prose :where(blockquote code):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.prose :where(thead th code):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.prose :where(pre):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-pre-code);
  background-color: var(--tw-prose-pre-bg);
  overflow-x: auto;
  font-weight: 400;
  font-size: 0.875em;
  line-height: 1.7142857;
  margin-top: 1.7142857em;
  margin-bottom: 1.7142857em;
  border-radius: 0.375rem;
  padding-top: 0.8571429em;
  padding-right: 1.1428571em;
  padding-bottom: 0.8571429em;
  padding-left: 1.1428571em;
}

.prose :where(pre code):not(:where([class~="not-prose"] *)) {
  background-color: transparent;
  border-width: 0;
  border-radius: 0;
  padding: 0;
  font-weight: inherit;
  color: inherit;
  font-size: inherit;
  font-family: inherit;
  line-height: inherit;
}

.prose :where(pre code):not(:where([class~="not-prose"] *))::before {
  content: none;
}

.prose :where(pre code):not(:where([class~="not-prose"] *))::after {
  content: none;
}

.prose :where(table):not(:where([class~="not-prose"] *)) {
  width: 100%;
  table-layout: auto;
  text-align: left;
  margin-top: 2em;
  margin-bottom: 2em;
  font-size: 0.875em;
  line-height: 1.7142857;
}

.prose :where(thead):not(:where([class~="not-prose"] *)) {
  border-bottom-width: 1px;
  border-bottom-color: var(--tw-prose-th-borders);
}

.prose :where(thead th):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  vertical-align: bottom;
  padding-right: 0.5714286em;
  padding-bottom: 0.5714286em;
  padding-left: 0.5714286em;
}

.prose :where(tbody tr):not(:where([class~="not-prose"] *)) {
  border-bottom-width: 1px;
  border-bottom-color: var(--tw-prose-td-borders);
}

.prose :where(tbody tr:last-child):not(:where([class~="not-prose"] *)) {
  border-bottom-width: 0;
}

.prose :where(tbody td):not(:where([class~="not-prose"] *)) {
  vertical-align: baseline;
}

.prose :where(tfoot):not(:where([class~="not-prose"] *)) {
  border-top-width: 1px;
  border-top-color: var(--tw-prose-th-borders);
}

.prose :where(tfoot td):not(:where([class~="not-prose"] *)) {
  vertical-align: top;
}

.prose {
  --tw-prose-body: #374151;
  --tw-prose-headings: #111827;
  --tw-prose-lead: #4b5563;
  --tw-prose-links: #111827;
  --tw-prose-bold: #111827;
  --tw-prose-counters: #6b7280;
  --tw-prose-bullets: #d1d5db;
  --tw-prose-hr: #e5e7eb;
  --tw-prose-quotes: #111827;
  --tw-prose-quote-borders: #e5e7eb;
  --tw-prose-captions: #6b7280;
  --tw-prose-code: #111827;
  --tw-prose-pre-code: #e5e7eb;
  --tw-prose-pre-bg: #1f2937;
  --tw-prose-th-borders: #d1d5db;
  --tw-prose-td-borders: #e5e7eb;
  --tw-prose-invert-body: #d1d5db;
  --tw-prose-invert-headings: #fff;
  --tw-prose-invert-lead: #9ca3af;
  --tw-prose-invert-links: #fff;
  --tw-prose-invert-bold: #fff;
  --tw-prose-invert-counters: #9ca3af;
  --tw-prose-invert-bullets: #4b5563;
  --tw-prose-invert-hr: #374151;
  --tw-prose-invert-quotes: #f3f4f6;
  --tw-prose-invert-quote-borders: #374151;
  --tw-prose-invert-captions: #9ca3af;
  --tw-prose-invert-code: #fff;
  --tw-prose-invert-pre-code: #d1d5db;
  --tw-prose-invert-pre-bg: rgb(0 0 0 / 50%);
  --tw-prose-invert-th-borders: #4b5563;
  --tw-prose-invert-td-borders: #374151;
  font-size: 1rem;
  line-height: 1.75;
}

.prose :where(video):not(:where([class~="not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}

.prose :where(figure):not(:where([class~="not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}

.prose :where(li):not(:where([class~="not-prose"] *)) {
  margin-top: 0.5em;
  margin-bottom: 0.5em;
}

.prose :where(ol > li):not(:where([class~="not-prose"] *)) {
  padding-left: 0.375em;
}

.prose :where(ul > li):not(:where([class~="not-prose"] *)) {
  padding-left: 0.375em;
}

.prose :where(.prose > ul > li p):not(:where([class~="not-prose"] *)) {
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}

.prose :where(.prose > ul > li > *:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.25em;
}

.prose :where(.prose > ul > li > *:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.25em;
}

.prose :where(.prose > ol > li > *:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.25em;
}

.prose :where(.prose > ol > li > *:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.25em;
}

.prose :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"] *)) {
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}

.prose :where(hr + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.prose :where(h2 + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.prose :where(h3 + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.prose :where(h4 + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.prose :where(thead th:first-child):not(:where([class~="not-prose"] *)) {
  padding-left: 0;
}

.prose :where(thead th:last-child):not(:where([class~="not-prose"] *)) {
  padding-right: 0;
}

.prose :where(tbody td, tfoot td):not(:where([class~="not-prose"] *)) {
  padding-top: 0.5714286em;
  padding-right: 0.5714286em;
  padding-bottom: 0.5714286em;
  padding-left: 0.5714286em;
}

.prose :where(tbody td:first-child, tfoot td:first-child):not(:where([class~="not-prose"] *)) {
  padding-left: 0;
}

.prose :where(tbody td:last-child, tfoot td:last-child):not(:where([class~="not-prose"] *)) {
  padding-right: 0;
}

.prose :where(.prose > :first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.prose :where(.prose > :last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 0;
}

.fixed {
  position: fixed;
}

.absolute {
  position: absolute;
}

.relative {
  position: relative;
}

.left-0 {
  left: 0px;
}

.top-0 {
  top: 0px;
}

.z-50 {
  z-index: 50;
}

.col-span-1 {
  grid-column: span 1 / span 1;
}

.col-span-2 {
  grid-column: span 2 / span 2;
}

.col-span-3 {
  grid-column: span 3 / span 3;
}

.col-span-4 {
  grid-column: span 4 / span 4;
}

.row-span-1 {
  grid-row: span 1 / span 1;
}

.row-span-2 {
  grid-row: span 2 / span 2;
}

.row-span-3 {
  grid-row: span 3 / span 3;
}

.mx-2 {
  margin-left: 0.5rem;
  margin-right: 0.5rem;
}

.mx-auto {
  margin-left: auto;
  margin-right: auto;
}

.my-0 {
  margin-top: 0px;
  margin-bottom: 0px;
}

.mb-2 {
  margin-bottom: 0.5rem;
}

.mb-4 {
  margin-bottom: 1rem;
}

.mb-6 {
  margin-bottom: 1.5rem;
}

.mt-2 {
  margin-top: 0.5rem;
}

.mt-3 {
  margin-top: 0.75rem;
}

.mt-4 {
  margin-top: 1rem;
}

.mt-8 {
  margin-top: 2rem;
}

.block {
  display: block;
}

.inline-block {
  display: inline-block;
}

.flex {
  display: flex;
}

.inline-flex {
  display: inline-flex;
}

.grid {
  display: grid;
}

.hidden {
  display: none;
}

.aspect-square {
  aspect-ratio: 1 / 1;
}

.aspect-video {
  aspect-ratio: 16 / 9;
}

.h-12 {
  height: 3rem;
}

.h-20 {
  height: 5rem;
}

.h-24 {
  height: 6rem;
}

.h-6 {
  height: 1.5rem;
}

.h-8 {
  height: 2rem;
}

.h-full {
  height: 100%;
}

.h-auto {
  height: auto;
}

.w-12 {
  width: 3rem;
}

.w-16 {
  width: 4rem;
}

.w-28 {
  width: 7rem;
}

.w-6 {
  width: 1.5rem;
}

.w-full {
  width: 100%;
}

.w-auto {
  width: auto;
}

.max-w-2xl {
  max-width: 42rem;
}

.max-w-xl {
  max-width: 36rem;
}

.flex-1 {
  flex: 1 1 0%;
}

.shrink-0 {
  flex-shrink: 0;
}

.grow {
  flex-grow: 1;
}

.grow-0 {
  flex-grow: 0;
}

.transform {
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.grid-cols-1 {
  grid-template-columns: repeat(1, minmax(0, 1fr));
}

.grid-cols-2 {
  grid-template-columns: repeat(2, minmax(0, 1fr));
}

.grid-cols-3 {
  grid-template-columns: repeat(3, minmax(0, 1fr));
}

.grid-cols-4 {
  grid-template-columns: repeat(4, minmax(0, 1fr));
}

.flex-row {
  flex-direction: row;
}

.flex-row-reverse {
  flex-direction: row-reverse;
}

.flex-col {
  flex-direction: column;
}

.flex-wrap {
  flex-wrap: wrap;
}

.content-center {
  align-content: center;
}

.items-center {
  align-items: center;
}

.justify-center {
  justify-content: center;
}

.justify-items-center {
  justify-items: center;
}

.gap-2 {
  gap: 0.5rem;
}

.gap-4 {
  gap: 1rem;
}

.gap-x-4 {
  -moz-column-gap: 1rem;
       column-gap: 1rem;
}

.rounded {
  border-radius: 0.25rem;
}

.rounded-sm {
  border-radius: 0.125rem;
}

.bg-amber-50 {
  --tw-bg-opacity: 1;
  background-color: rgb(255 251 235 / var(--tw-bg-opacity));
}

.bg-black\/60 {
  background-color: rgb(0 0 0 / 0.6);
}

.bg-red-800 {
  --tw-bg-opacity: 1;
  background-color: rgb(153 27 27 / var(--tw-bg-opacity));
}

.bg-sky-500 {
  --tw-bg-opacity: 1;
  background-color: rgb(14 165 233 / var(--tw-bg-opacity));
}

.bg-slate-900 {
  --tw-bg-opacity: 1;
  background-color: rgb(15 23 42 / var(--tw-bg-opacity));
}

.bg-white {
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity));
}

.bg-gradient-to-b {
  background-image: linear-gradient(to bottom, var(--tw-gradient-stops));
}

.from-slate-900 {
  --tw-gradient-from: #0f172a var(--tw-gradient-from-position);
  --tw-gradient-to: rgb(15 23 42 / 0) var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
}

.to-slate-700 {
  --tw-gradient-to: #334155 var(--tw-gradient-to-position);
}

.fill-current {
  fill: currentColor;
}

.object-contain {
  -o-object-fit: contain;
     object-fit: contain;
}

.object-cover {
  -o-object-fit: cover;
     object-fit: cover;
}

.p-2 {
  padding: 0.5rem;
}

.p-3 {
  padding: 0.75rem;
}

.px-2 {
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}

.py-2 {
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
}

.py-4 {
  padding-top: 1rem;
  padding-bottom: 1rem;
}

.pb-3 {
  padding-bottom: 0.75rem;
}

.pr-2 {
  padding-right: 0.5rem;
}

.pt-2 {
  padding-top: 0.5rem;
}

.text-right {
  text-align: right;
}

.font-mono {
  font-family: MonoLisa Variable, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, Liberation Mono, Courier New, monospace;
}

.text-2xl {
  font-size: 1.5rem;
  line-height: 2rem;
}

.text-base {
  font-size: 1rem;
  line-height: 1.5rem;
}

.text-xl {
  font-size: 1.25rem;
  line-height: 1.75rem;
}

.text-xs {
  font-size: 0.75rem;
  line-height: 1rem;
}

.font-bold {
  font-weight: 700;
}

.font-extralight {
  font-weight: 200;
}

.font-light {
  font-weight: 300;
}

.font-medium {
  font-weight: 500;
}

.italic {
  font-style: italic;
}

.leading-6 {
  line-height: 1.5rem;
}

.leading-8 {
  line-height: 2rem;
}

.text-amber-50 {
  --tw-text-opacity: 1;
  color: rgb(255 251 235 / var(--tw-text-opacity));
}

.text-black {
  --tw-text-opacity: 1;
  color: rgb(0 0 0 / var(--tw-text-opacity));
}

.text-stone-900 {
  --tw-text-opacity: 1;
  color: rgb(28 25 23 / var(--tw-text-opacity));
}

.text-white {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}

.underline {
  text-decoration-line: underline;
}

.decoration-red-600 {
  text-decoration-color: #dc2626;
}

.decoration-red-900 {
  text-decoration-color: #7f1d1d;
}

.decoration-white {
  text-decoration-color: #fff;
}

.decoration-dashed {
  text-decoration-style: dashed;
}

.decoration-2 {
  text-decoration-thickness: 2px;
}

.opacity-40 {
  opacity: 0.4;
}

.opacity-60 {
  opacity: 0.6;
}

.opacity-70 {
  opacity: 0.7;
}

.opacity-90 {
  opacity: 0.9;
}

.shadow {
  --tw-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.transition {
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.duration-150 {
  transition-duration: 150ms;
}

.duration-300 {
  transition-duration: 300ms;
}

.ease-in-out {
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}

@media (min-width: 1000px) {
  .lg\:container {
    width: 100%;
  }

  @media (min-width: 520px) {
    .lg\:container {
      max-width: 520px;
    }
  }

  @media (min-width: 620px) {
    .lg\:container {
      max-width: 620px;
    }
  }

  @media (min-width: 1000px) {
    .lg\:container {
      max-width: 1000px;
    }
  }
}

.hover\:scale-105:hover {
  --tw-scale-x: 1.05;
  --tw-scale-y: 1.05;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.hover\:bg-red-600:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(220 38 38 / var(--tw-bg-opacity));
}

.hover\:underline:hover {
  text-decoration-line: underline;
}

.hover\:decoration-red-600:hover {
  text-decoration-color: #dc2626;
}

.hover\:shadow-lg:hover {
  --tw-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color), 0 4px 6px -4px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.focus\:border-red-600:focus {
  --tw-border-opacity: 1;
  border-color: rgb(220 38 38 / var(--tw-border-opacity));
}

.focus\:outline-none:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.active\:bg-red-600:active {
  --tw-bg-opacity: 1;
  background-color: rgb(220 38 38 / var(--tw-bg-opacity));
}

@media (min-width: 520px) {
  .sm\:inline {
    display: inline;
  }

  .sm\:flex {
    display: flex;
  }

  .sm\:h-20 {
    height: 5rem;
  }

  .sm\:grow {
    flex-grow: 1;
  }

  .sm\:grid-cols-4 {
    grid-template-columns: repeat(4, minmax(0, 1fr));
  }

  .sm\:flex-row {
    flex-direction: row;
  }

  .sm\:flex-col {
    flex-direction: column;
  }

  .sm\:gap-4 {
    gap: 1rem;
  }

  .sm\:p-4 {
    padding: 1rem;
  }

  .sm\:px-4 {
    padding-left: 1rem;
    padding-right: 1rem;
  }

  .sm\:py-3 {
    padding-top: 0.75rem;
    padding-bottom: 0.75rem;
  }

  .sm\:py-4 {
    padding-top: 1rem;
    padding-bottom: 1rem;
  }

  .sm\:pr-4 {
    padding-right: 1rem;
  }

  .sm\:text-right {
    text-align: right;
  }
}

@media (min-width: 620px) {
  .md\:col-span-2 {
    grid-column: span 2 / span 2;
  }

  .md\:my-8 {
    margin-top: 2rem;
    margin-bottom: 2rem;
  }

  .md\:mb-0 {
    margin-bottom: 0px;
  }

  .md\:block {
    display: block;
  }

  .md\:inline {
    display: inline;
  }

  .md\:flex {
    display: flex;
  }

  .md\:hidden {
    display: none;
  }

  .md\:h-16 {
    height: 4rem;
  }

  .md\:h-20 {
    height: 5rem;
  }

  .md\:w-0 {
    width: 0px;
  }

  .md\:grid-cols-12 {
    grid-template-columns: repeat(12, minmax(0, 1fr));
  }

  .md\:grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }

  .md\:grid-cols-3 {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }

  .md\:gap-4 {
    gap: 1rem;
  }

  .md\:p-12 {
    padding: 3rem;
  }

  .md\:py-8 {
    padding-top: 2rem;
    padding-bottom: 2rem;
  }
}

@media (min-width: 1000px) {
  .lg\:col-span-1 {
    grid-column: span 1 / span 1;
  }

  .lg\:col-span-2 {
    grid-column: span 2 / span 2;
  }

  .lg\:col-span-3 {
    grid-column: span 3 / span 3;
  }

  .lg\:col-span-4 {
    grid-column: span 4 / span 4;
  }

  .lg\:row-span-1 {
    grid-row: span 1 / span 1;
  }

  .lg\:row-span-2 {
    grid-row: span 2 / span 2;
  }

  .lg\:row-span-3 {
    grid-row: span 3 / span 3;
  }

  .lg\:mx-auto {
    margin-left: auto;
    margin-right: auto;
  }

  .lg\:grid-cols-3 {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }
}